// Script generated by RWAD-tpw
import * as React from 'react';
import {useState, useEffect, useRef, forwardRef, Component} from 'react';
import { NavigationContainer } from '@react-navigation/native';
import {
  View,
  BackHandler,
  ActivityIndicator,
  Image,
  StyleSheet,

} from 'react-native';
import {createStackNavigator} from '@react-navigation/stack';
// import {WebView} from 'react-native-webview';
import { WebView } from '@dlwlrma00/react-native-webview-bypass-ssl'
// import AsyncStorage from '@react-native-community/async-storage';
import 'react-native-gesture-handler';

import Url from './Url'
import Color from './Color'


class HomeScreen extends Component{
  constructor(props) {
    super(props);
    this.WEBVIEW_REF = React.createRef();
    this.state = {
      visible: false
    }
  }

  componentDidMount() {
    BackHandler.addEventListener('hardwareBackPress', this.handleBackButton);
  }

  componentWillUnmount() {
    BackHandler.removeEventListener('hardwareBackPress', this.handleBackButton);
  }

  handleBackButton = ()=>{
    this.WEBVIEW_REF.current.goBack();
    return true;
  }

  onNavigationStateChange(navState) {
    this.setState({
      canGoBack: navState.canGoBack
    });
  }
  renderLoading = () => <ActivityIndicator
      color='black'
      animating
      size='large'
      style={{position: 'absolute',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      alignItems: 'center',
      justifyContent: 'center'}}
    />
     hideSpinner=()=> {
      this.setState({ visible: false });
    }
    showSpinner=()=> {
      this.setState({ visible: true });
    }

    render(){
      
      return (
        <View style={{flex: 1}}>
        <WebView source={{ uri: Url }}

          startInLoadingState={true}
          onLoadStart={() =>
            this.setState({visible: true}) & console.log('Loading..')
          }
          onLoadEnd={() =>
            this.setState({visible: false}) & console.log('Loaded')
          }
          ignoreSslError={true}
          scalesPageToFit={true}
          //onLoad={() => this.showSpinner}
          javaScriptEnabled={true}
          domStorageEnabled={true}
          renderLoading={this.renderLoading}
         // onLoadProgress={() =>  this.setState({ visible: false }) & console.log("Loading..")}
          ref={this.WEBVIEW_REF}
          onNavigationStateChange={this.onNavigationStateChange.bind(this)}
        />

          {this.state.visible && (
          <View
            style={{
              flex: 1,
              backgroundColor: 'white',
              left: 0,
              right: 0,
              top: 0,
              bottom: 0,position: 'absolute',alignItems: 'center',
              justifyContent: 'center',}}>
            
              {/* <Text style={{fontSize: 14, textAlign: "center"}}>Meeting Tracker by</Text> */}
              <Image
                style={{
                  alignItems: 'center',
                  justifyContent: 'center',
                  backgroundColor: "white",
                  resizeMode: "center",
                  width: "60%",
                  height:130
                }}
                source= {require('./img/splash.png')}
              />
              <ActivityIndicator size="large" color={Color}/>
            </View>
          )}
        </View>
        
      ); 
    }
  
}
  

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
        <Stack.Navigator initialRouteName="Home">
            <Stack.Screen name="Home" component={HomeScreen} options={{headerShown: false}} />
            {/* <Stack.Screen name="Login" component={LoginScreen} options={{headerShown: false}}/> */}
        </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  create:{
      marginTop: 24,
      height: 50,
      width: "40%",
      marginHorizontal: 5,
      borderRadius: 60,
      alignItems: "center",
      justifyContent: "center"
  },
  createf:{
      marginTop: 20,
      height: 50,
      width: 190,
      borderRadius: 60,
      alignItems: "center",
      justifyContent: "center"
  },
  ImageStyle: {
      padding: 10,
      margin: 5,
      height: 28,
      width: 28,
      resizeMode: 'stretch',
      alignItems: 'center',
    },
})